; BTOR description generated by firrtl 1.5.1 for module DividerFixedClock.
1 sort bitvec 1
2 input 1 reset
3 input 1 io_in_valid
4 sort bitvec 2
5 input 4 io_in_bits_0
6 input 4 io_in_bits_1
7 input 1 io_sign
8 input 1 io_out_ready
9 sort bitvec 3
10 state 9 state ; @[DividerFixedClock.scala 16:23]
11 sort bitvec 5
12 state 11 shiftReg ; @[DividerFixedClock.scala 22:21]
13 state 1 aSignReg ; @[Reg.scala 16:16]
14 state 1 qSignReg ; @[Reg.scala 16:16]
15 state 4 bReg ; @[Reg.scala 16:16]
16 state 9 aValx2Reg ; @[Reg.scala 16:16]
17 state 1 value ; @[Counter.scala 62:40]
18 zero 9
19 eq 1 10 18 ; @[DividerFixedClock.scala 17:23]
20 zero 9
21 eq 1 10 20 ; @[DividerFixedClock.scala 57:26]
22 output 21 ; io_in_ready @[DividerFixedClock.scala 57:16]
23 and 1 21 3 ; @[Decoupled.scala 50:35]
24 and 1 19 23 ; @[DividerFixedClock.scala 17:35]
25 zero 4
26 eq 1 6 25 ; @[DividerFixedClock.scala 20:18]
27 slice 9 12 4 2 ; @[DividerFixedClock.scala 23:26]
28 slice 4 12 1 0 ; @[DividerFixedClock.scala 24:26]
29 slice 1 5 1 1 ; @[DividerFixedClock.scala 10:14]
30 and 1 29 7 ; @[DividerFixedClock.scala 10:24]
31 zero 1
32 uext 9 31 2
33 uext 9 5 1
34 sub 9 32 33 ; @[DividerFixedClock.scala 11:16]
35 slice 4 34 1 0 ; @[DividerFixedClock.scala 11:16]
36 ite 4 30 35 5 ; @[DividerFixedClock.scala 11:12]
37 slice 1 6 1 1 ; @[DividerFixedClock.scala 10:14]
38 and 1 37 7 ; @[DividerFixedClock.scala 10:24]
39 zero 1
40 uext 9 39 2
41 uext 9 6 1
42 sub 9 40 41 ; @[DividerFixedClock.scala 11:16]
43 slice 4 42 1 0 ; @[DividerFixedClock.scala 11:16]
44 ite 4 38 43 6 ; @[DividerFixedClock.scala 11:12]
45 ite 1 24 30 13 ; @[Reg.scala 16:16 17:{18,22}]
46 xor 1 30 38 ; @[DividerFixedClock.scala 29:40]
47 zero 1
48 eq 1 26 47 ; @[DividerFixedClock.scala 29:52]
49 and 1 46 48 ; @[DividerFixedClock.scala 29:49]
50 ite 1 24 49 14 ; @[Reg.scala 16:16 17:{18,22}]
51 ite 4 24 44 15 ; @[Reg.scala 16:16 17:{18,22}]
52 zero 1
53 concat 9 36 52 ; @[Cat.scala 31:58]
54 ite 9 24 53 16 ; @[Reg.scala 16:16 17:{18,22}]
55 one 9
56 eq 1 10 55 ; @[DividerFixedClock.scala 36:20]
57 const 9 010
58 eq 1 10 57 ; @[DividerFixedClock.scala 39:20]
59 const 9 011
60 eq 1 10 59 ; @[DividerFixedClock.scala 42:20]
61 uext 9 15 1
62 ugte 1 27 61 ; @[DividerFixedClock.scala 43:28]
63 sort bitvec 4
64 uext 63 27 1
65 uext 63 15 2
66 sub 63 64 65 ; @[DividerFixedClock.scala 44:36]
67 slice 9 66 2 0 ; @[DividerFixedClock.scala 44:36]
68 ite 9 62 67 27 ; @[DividerFixedClock.scala 44:24]
69 slice 4 68 1 0 ; @[DividerFixedClock.scala 44:47]
70 concat 63 69 28 ; @[Cat.scala 31:58]
71 concat 11 70 62 ; @[Cat.scala 31:58]
72 one 1
73 eq 1 17 72 ; @[Counter.scala 74:24]
74 uext 4 17 1
75 one 1
76 uext 4 75 1
77 add 4 74 76 ; @[Counter.scala 78:24]
78 slice 1 77 0 0 ; @[Counter.scala 78:24]
79 one 1
80 eq 1 17 79 ; @[DividerFixedClock.scala 46:20]
81 const 9 100
82 ite 9 80 81 10 ; @[DividerFixedClock.scala 16:23 46:{37,45}]
83 const 9 100
84 eq 1 10 83 ; @[DividerFixedClock.scala 47:20]
85 zero 9
86 ite 9 84 85 10 ; @[DividerFixedClock.scala 47:34 48:11 16:23]
87 ite 11 60 71 12 ; @[DividerFixedClock.scala 42:35 44:14 22:21]
88 ite 1 60 78 17 ; @[DividerFixedClock.scala 42:35 Counter.scala 78:15 62:40]
89 ite 9 60 82 86 ; @[DividerFixedClock.scala 42:35]
90 uext 11 16 2
91 ite 11 58 90 87 ; @[DividerFixedClock.scala 39:33 40:14]
92 const 9 011
93 ite 9 58 92 89 ; @[DividerFixedClock.scala 39:33 41:14]
94 ite 1 58 17 88 ; @[DividerFixedClock.scala 39:33 Counter.scala 62:40]
95 zero 1
96 ite 1 56 95 94 ; @[DividerFixedClock.scala 36:32 37:15]
97 const 9 010
98 ite 9 56 97 93 ; @[DividerFixedClock.scala 36:32 38:15]
99 ite 11 56 12 91 ; @[DividerFixedClock.scala 22:21 36:32]
100 one 9
101 ite 9 24 100 98 ; @[DividerFixedClock.scala 34:16 35:11]
102 ite 1 24 17 96 ; @[DividerFixedClock.scala 34:16 Counter.scala 62:40]
103 ite 11 24 12 99 ; @[DividerFixedClock.scala 34:16 22:21]
104 slice 4 27 2 1 ; @[DividerFixedClock.scala 51:16]
105 zero 1
106 uext 9 105 2
107 uext 9 28 1
108 sub 9 106 107 ; @[DividerFixedClock.scala 52:28]
109 slice 4 108 1 0 ; @[DividerFixedClock.scala 52:28]
110 ite 4 14 109 28 ; @[DividerFixedClock.scala 52:17]
111 zero 1
112 uext 9 111 2
113 uext 9 104 1
114 sub 9 112 113 ; @[DividerFixedClock.scala 53:28]
115 slice 4 114 1 0 ; @[DividerFixedClock.scala 53:28]
116 ite 4 13 115 104 ; @[DividerFixedClock.scala 53:17]
117 concat 63 116 110 ; @[Cat.scala 31:58]
118 const 9 100
119 eq 1 10 118 ; @[DividerFixedClock.scala 56:26]
120 output 119 ; io_out_valid @[DividerFixedClock.scala 56:16]
121 output 117 ; io_out_bits @[DividerFixedClock.scala 54:15]
; state.next
122 zero 9
123 ite 9 2 122 101
124 next 9 10 123
; shiftReg.next
125 next 11 12 103
; aSignReg.next
126 next 1 13 45
; qSignReg.next
127 next 1 14 50
; bReg.next
128 next 4 15 51
; aValx2Reg.next
129 next 9 16 54
; value.next
130 zero 1
131 ite 1 2 130 102
132 next 1 17 131



